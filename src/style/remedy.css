/*
 * Reset, normalize and remedy, all smushed together.
 *
 * https://github.com/jensimmons/cssremedy
 * https://piccalil.li/blog/a-more-modern-css-reset/
 */

*,
*::before,
*::after {
	box-sizing: border-box;
}

* {
	font-family: inherit;
	margin: 0;
	outline-offset: max(0.0625rem, 1px);
	padding: 0;
	text-decoration-thickness: from-font;
}

html {
	color-scheme: light dark;
	font-family:
		system-ui,
		-apple-system,
		BlinkMacSystemFont,
		Inter,
		sans-serif;
	font-kerning: normal;
	font-optical-sizing: auto;
	-webkit-font-smoothing: antialiased;
	font-synthesis: none;
	hanging-punctuation: first allow-end last;
	hyphenate-character: '‐'; /* Unambiguous hyphen U+2010 */
	letter-spacing: 0;
	margin: 0;
	orphans: 2;
	overflow-wrap: break-word;
	padding: 0;
	print-color-adjust: exact;
	tab-size: 2;
	text-rendering: geometricPrecision;
	text-underline-position: from-font;
	text-wrap: pretty;
}

[hidden] {
	display: none;
}

body {
	min-block-size: 100svh;
}

p {
	margin-block: 0 1em;
}

ul,
ol {
	padding-inline-start: 1em;
}

b,
strong {
	font-weight: bolder;
}

em,
i,
var {
	font-style: italic;
}

em > em,
em > i,
i > em,
i > i {
	font-style: normal;
}

code,
kbd,
pre,
samp {
	font-family: ui-monospace, monospace;
}

abbr {
	text-decoration: none;
}

hr {
	border-inline: 0;
	box-sizing: content-box;
	height: 0;
}

audio,
canvas,
embed,
figure,
iframe,
img,
object,
picture,
svg,
video {
	display: block;
	max-width: 100%;
	vertical-align: middle; /* If `display` value is overridden */
}

audio:not([controls]) {
	display: none;
}

audio {
	width: 100%;
}

canvas,
img,
picture,
svg,
video {
	border-style: none;
	height: auto;
}

picture {
	display: contents;
}

source {
	display: none;
}

fieldset {
	border: 0;
	min-inline-size: 0;
}

input,
textarea {
	hanging-punctuation: none;
}

input,
button,
textarea,
select {
	font-size: inherit;
	touch-action: manipulation;
}

@media (prefers-reduced-motion: no-preference) {
	:root {
		scroll-behavior: smooth;
	}
}
